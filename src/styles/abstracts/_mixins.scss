@use './variables' as var;

// =============================================
// Mixin: respond($name)
// Creates media queries based on named breakpoints from the variables map.
// =============================================
@mixin respond($name) {
    @if not map-has-key(var.$breakpoints, $name) {
        @warn "Warning: `#{$name}` is not a valid breakpoint name.";
    } @else {
        @media (min-width: map-get(var.$breakpoints, $name)) {
            @content;
        }
    }
}

// =============================================
// Mixin: flexbox($justify, $align, $direction)
// Shorthand for common flexbox layout properties.
// Defaults: justify-content: space-between;
//           align-items: center;
//           flex-direction: row;
// =============================================
@mixin flexbox($justify: space-between, $align: center, $direction: row) {
    display: flex;
    justify-content: $justify;
    align-items: $align;
    flex-direction: $direction;
}

// =============================================
// Mixin: line-clamp($lines)
// Limits text to a specified number of lines with ellipsis overflow.
// =============================================
@mixin line-clamp($lines: 1) {
    overflow: hidden;
    text-overflow: ellipsis;

    @if $lines == 1 {
        white-space: nowrap;
        display: block;
    } @else {
        display: -webkit-box;
        -webkit-line-clamp: $lines;
        -webkit-box-orient: vertical;
    }
}
